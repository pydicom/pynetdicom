name: pull-request-pytest

on:
  pull_request:
    branches: [ main ]

jobs:

  conda:
    # Test conda build with latest Python version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - name: Install dependencies
      run: |
        conda install pytest
        conda install -c conda-forge pydicom
    - name: Get OpenSSL version
      run: |
        python -c "import ssl; print('OpenSSL:', ssl.OPENSSL_VERSION_INFO)"
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest -x --ignore=pynetdicom/apps

  windows:
    runs-on: windows-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -e .[tests]
      - name: Get OpenSSL version
        run: |
          python -c "import ssl; print('OpenSSL:', ssl.OPENSSL_VERSION_INFO)"
      - name: Test with pytest
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          pytest -x --cov pynetdicom --ignore=pynetdicom/apps
      - name: Send coverage results
        if: ${{ success() }}
        uses: codecov/codecov-action@v4

  # pydicom-dev:
  #   # Matrix builds with development pydicom
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ['3.10']
  #
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v5
  #     id: setup-python
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: pip install -e .[tests]
  #   - name: Switch to development pydicom
  #     run: |
  #       pip install git+https://github.com/pydicom/pydicom
  #   - name: Test with pytest
  #     env:
  #       PYTHON_VERSION: ${{ matrix.python-version }}
  #     run: |
  #       pytest -x --cov pynetdicom --ignore=pynetdicom/apps && coverage xml
  #   - name: Send coverage results
  #     if: ${{ success() }}
  #     uses: codecov/codecov-action@v4

  pydicom-release:
    # Matrix builds with released pydicom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -e .[tests]
    - name: Get OpenSSL version
      run: |
        python -c "import ssl; print('OpenSSL:', ssl.OPENSSL_VERSION_INFO)"
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest -x --cov pynetdicom --ignore=pynetdicom/apps
    - name: Send coverage results
      if: ${{ success() }}
      uses: codecov/codecov-action@v4
