name: pull-request-pytest

on:
  pull_request:
    branches: [ master ]

jobs:

  conda:
    # Test conda build with latest Python version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - name: Install dependencies
      run: |
        conda install pytest
        conda install -c conda-forge pydicom
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --ignore=pynetdicom/apps

  windows:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
     - uses: actions/checkout@v4
     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v4
       with:
         python-version: ${{ matrix.python-version }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install pytest coverage pytest-cov pydicom
     - name: Test with pytest
       env:
         PYTHON_VERSION: ${{ matrix.python-version }}
       run: |
         pytest --cov pynetdicom --ignore=pynetdicom/apps
     - name: Send coverage results
       if: ${{ success() }}
       uses: codecov/codecov-action@v3

  pydicom-dev:
    # Matrix builds with development pydicom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage pytest-cov
        pip install git+https://github.com/pydicom/pydicom
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --cov pynetdicom --ignore=pynetdicom/apps
    - name: Send coverage results
      if: ${{ success() }}
      uses: codecov/codecov-action@v3

  pydicom-release:
    # Matrix builds with released pydicom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pydicom coverage pytest-cov
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --cov pynetdicom --ignore=pynetdicom/apps
    - name: Send coverage results
      if: ${{ success() }}
      uses: codecov/codecov-action@v3
