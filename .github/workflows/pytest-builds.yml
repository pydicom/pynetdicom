name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  conda:
    # Test conda build with latest Python version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Setup conda
      uses: s-weigand/setup-conda@v1
      with:
        update-conda: true
        python-version: ${{ matrix.python-version }}
        conda-channels: anaconda, conda-forge
    - name: Install dependencies
      run: |
        conda install pytest coverage pytest-cov
        conda install -c conda-forge pydicom
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --ignore=pynetdicom/apps

  windows:
    runs-on: windows-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
     - uses: actions/checkout@v2
     - name: Set up Python ${{ matrix.python-version }}
       uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install pytest pydicom
     - name: Test with pytest
       env:
         PYTHON_VERSION: ${{ matrix.python-version }}
       run: |
         pytest --ignore=pynetdicom/apps

  # MacOS is just too finicky with time.sleep() calls
  # macos:
  #   runs-on: macos-latest
  #   timeout-minutes: 30
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.8]
  #
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install pytest pydicom
  #     - name: Test with pytest
  #       env:
  #         PYTHON_VERSION: ${{ matrix.python-version }}
  #       run: |
  #         pytest --ignore=pynetdicom/apps

  pydicom-dev:
    # Matrix builds with development pydicom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage pytest-cov
        pip install git+https://github.com/pydicom/pydicom
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --cov pynetdicom --ignore=pynetdicom/apps
    - name: Send coverage results
      if: ${{ success() }}
      run: |
        bash <(curl --connect-timeout 10 --retry 10 --retry-max-time \
        0 https://codecov.io/bash) || (sleep 30 && bash <(curl \
        --connect-timeout 10 --retry 10 --retry-max-time \
        0 https://codecov.io/bash))

  pydicom-release:
    # Matrix builds with released pydicom
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pydicom coverage pytest-cov
    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        pytest --cov pynetdicom --ignore=pynetdicom/apps
    - name: Send coverage results
      if: ${{ success() }}
      run: |
        bash <(curl --connect-timeout 10 --retry 10 --retry-max-time \
        0 https://codecov.io/bash) || (sleep 30 && bash <(curl \
        --connect-timeout 10 --retry 10 --retry-max-time \
        0 https://codecov.io/bash))
