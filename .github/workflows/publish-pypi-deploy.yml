name: publish-pypi-deploy

on:
  release:
    types: [ published ]

jobs:

  build_and_test:
    name: Build and test the package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Build package
      run: |
        poetry build

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: dist/

    - name: Publish package to Test PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_PASSWORD }}
        repository_url: https://test.pypi.org/legacy/

    - name: Set up test environment
      run: |
        poetry install --no-interaction --extras tests
        pip install -i https://test.pypi.org/simple/ pynetdicom

    - name: Test with pytest
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        cd ${HOME}
        python -m pynetdicom --version
        python -c "import pytest; pytest.main(['--pyargs', 'pynetdicom.tests'])"

  deploy:
    name: Upload package to PyPI
    needs:
    - build_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Download the package files
      uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist/

    - name: Publish package to PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
