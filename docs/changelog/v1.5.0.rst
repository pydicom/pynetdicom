.. _v1.5.0:

1.5.0
=====

This will be the last release that supports Python 2.

Fixes
.....

* Fixed the :class:`~pynetdicom.transport.AssociationServer` not properly
  closing its sockets (:issue:`382`)
* Improved the robustness of determining the local IP address (:issue:`394`)
* Fixed not being able to set an *Implementation Version Name* of length 1
  (:issue:`414`)
* Changed ``ImplantationPlanSRDocumentStorage`` to
  :attr:`~pynetdicom.sop_class.ImplantationPlanSRStorage` to match the name
  from Part 6 of the DICOM Standard rather than Part 4.
* Stopped the QR Move SCP from associating with the move destination when no
  suboperations were required (:issue:`436`)


Enhancements
............

* Added configuration option :attr:`_config.USE_SHORT_DIMSE_AET
  <pynetdicom._config.USE_SHORT_DIMSE_AET>` so elements with a VR of **AE** in
  DIMSE messages are no longer padded to the maximum 16 characters.
  (:issue:`403`)
* When acting as the association Acceptor check that the user hasn't sent
  an A-ABORT or A-ASSOCIATE-RJ before attempting association negotiation
  (:issue:`408`)
* Added :py:attr:`~pynetdicom.events.Event.message_id` to
  :class:`~pynetdicom.events.Event` for use when receiving a DIMSE service
  request
* Added the well-known SOP Instances for the supported service classes to
  :mod:`~pynetdicom.sop_class`.
* Added support for the DIMSE intervention event handlers aborting or releasing
  the association during service class operation.
* Add new SOP classes up to 2019e version of the standard (:issue:`424`)
* Added :attr:`~pynetdicom.presentation.AllStoragePresentationContexts` which
  contains all of the Storage Service Class' SOP Class UIDs rather than just
  the first 128 as in
  :attr:`~pynetdicom.presentation.StoragePresentationContexts`.
* Overhaul of ``echoscu.py``, ``storescu.py`` and added non-toy implementations
  for ``findscu.py``, ``getscu.py`` and ``movescu.py`` apps.

Changes
.......

.. currentmodule:: pynetdicom.association

* Using a key that corresponds to a given UID with
  :meth:`Association.send_c_find`, :meth:`Association.send_c_get` and
  :meth:`Association.send_c_move` removed as per planned deprecation. Use the
  UID directly instead.
* Python 3.4 is no longer supported, Python 3.7 and 3.8 are now
  officially supported
* If an A-ABORT is received while waiting for a DIMSE message the
  ``Association.send_*`` methods will now return immediately rather than
  waiting for the DIMSE timeout. (:issue:`430`)
* Added `abort_type` keyword parameter to :meth:`ACSE.is_aborted()
  <pynetdicom.acse.ACSE.is_aborted>`
* Support for Python 2 is deprecated and will be removed starting in version
  2.0.


Known Issues
............

* TLS v1.3 (with OpenSSL 1.1.1 or higher) is not currently supported.
