.. _v2.0.0:

2.0.0
=====

Fixes
.....

* Fixed not processing multiple PDUs received when acting as the association
  requestor with SSL/TLS (:pr:`528`)
* Fixed not using the correct *Move Originator Message ID* when sending
  C-STORE-RQs when acting as a Move SCP (:issue:`541`)
* Fixed C-FIND, C-GET and C-MOVE SCPs sending the previous pending
  Identifier with the final success response (:issue:`571`)
* Fixed *Composite Instance Retrieve Without Bulk Data Get* SCPs not removing
  *Overlay Data*, *Audio Sample Data* and *Curve Data* bulk data elements
  (:pr:`608`)
* Fixed not sending a failure response if all C-GET or C-MOVE sub-operations
  failed when acting as an Query/Retrieve SCP (:issue:`577`)
* Fixed :meth:`ServiceUser.requested_contexts
  <pynetdicom.association.ServiceUser.requested_contexts>` and
  :meth:`ServiceUser.supported_contexts
  <pynetdicom.association.ServiceUser.supported_contexts>` not returning the
  expected contexts (:issue:`636`)

Enhancements
............

* Added configuration option :attr:`~pynetdicom._config.ALLOW_LONG_DIMSE_AET`
  to allow bypassing the length check for elements with a VR of **AE**
  (:issue:`515`)
* Added the ability to pass a file path to a dataset to
  :meth:`~pynetdicom.association.Association.send_c_store` (:issue:`517`)
* Added :attr:`~pynetdicom._config.STORE_SEND_CHUNKED_DATASET` config option
  to allow the use of a chunked read when a file path is passed to
  :meth:`~pynetdicom.association.Association.send_c_store` in order to
  reduce the memory needed for sending datasets (:issue:`517`)
* Added :attr:`~pynetdicom._config.STORE_RECV_CHUNKED_DATASET` config option
  to allow storing received C-STORE datasets directly to file,
  reducing the memory needed when receiving datasets (:issue:`517`)
* Allow parsing of dimse command sets that contain elements with non-conformant
  VMs (:issue:`554`)
* Added a check when acting as a QR SCP that returns from the event handler
  if the association is aborted or released (:issue:`592`)
* Added configuration option :attr:`~pynetdicom._config.PASS_CONTEXTVARS` to
  allow user code to define contextual behavior.
* Added :attr:`AE.connection_timeout
  <pynetdicom.ae.ApplicationEntity.connection_timeout>` (:issue:`616`)
* When running on Windows the minimum timer resolution now defaults to 1
  millisecond when an :class:`~pynetdicom.association.Association` is started
  and cleared when the ``Association`` ends. The timer resolution value can be
  customised with the :attr:`~pynetdicom._config.WINDOWS_TIMER_RESOLUTION`
  option (:issue:`620`)
* Updated to meet the 2021b version of the DICOM Standard
* Added type hints
* Handle non-conformant A-ASSOCIATE (RJ) 'Result', 'Source' and 'Diagnostic'
  values during ACSE negotiation (:issue:`633`)

Changes
.......

* Removed support for Python 2.7 and 3.5, added it for Python 3.9
* Minimum *pydicom* version is 2.2
* The *Failed SOP Instance UID List* sent with the final C-GET/C-MOVE SCP
  failure or warning responses no longer includes the SOP Instances for
  sub-operations that return a warning status
* SOP Class and Instance variable names changed to match the new UID keywords
  from the DICOM Standard. In particular ``VerificationSOPClass`` is now simply
  :attr:`~pynetdicom.sop_class.Verification`
