.. _v2.0.0:

2.0.0
=====

The major breaking changes with the version 2.0 release are:

  * Python 2 is no longer supported
  * SOP class variable names now use their `new DICOM UID keywords
    <https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1>`_
    (for example, *VerificationSOPClass* becomes simply *Verification*)
  * AE title values should be :class:`str` rather than :class:`bytes` and trailing
    padding spaces are stripped from the raw value during decoding.


Fixes
.....

* Fixed not processing multiple PDUs received when acting as the association
  requestor with SSL/TLS (:gh:`pynetdicom/pull/528`)
* Fixed not using the correct *Move Originator Message ID* when sending
  C-STORE-RQs when acting as a Move SCP (:gh:`pynetdicom/issues/541`)
* Fixed C-FIND, C-GET and C-MOVE SCPs sending the previous pending
  Identifier with the final success response (:gh:`pynetdicom/issues/571`)
* Fixed *Composite Instance Retrieve Without Bulk Data Get* SCPs not removing
  *Overlay Data*, *Audio Sample Data* and *Curve Data* bulk data elements
  (:gh:`pynetdicom/pull/608`)
* Fixed not sending a failure response if all C-GET or C-MOVE sub-operations
  failed when acting as an Query/Retrieve SCP (:gh:`pynetdicom/issues/577`)
* Fixed :meth:`ServiceUser.requested_contexts
  <pynetdicom.association.ServiceUser.requested_contexts>` and
  :meth:`ServiceUser.supported_contexts
  <pynetdicom.association.ServiceUser.supported_contexts>` not returning the
  expected contexts (:gh:`pynetdicom/issues/636`)
* Fixed `qrscp --clean` (:gh:`pynetdicom/issues/681`, :gh:`pynetdicom/issues/682`)
* Fixed a memory leak when running :class:`~pynetdicom.transport.AssociationServer`
  due to old Association threads not being garbage collected (:gh:`pynetdicom/issues/669`)
* Fixed an exception in the state machine during association negotiation as the acceptor
  when an A-ABORT-RQ PDU is received before the initial A-ASSOCIATE-RQ has been
  processed (:gh:`pynetdicom/issues/721`)
* Fixed network timeouts not working as expected on Windows (:gh:`pynetdicom/issues/653`)


Enhancements
............

* Added the ability to pass a file path to a dataset to
  :meth:`~pynetdicom.association.Association.send_c_store` (:gh:`pynetdicom/issues/517`)
* Allow parsing of DIMSE command sets that contain elements with non-conformant
  VMs (:gh:`pynetdicom/issues/554`)
* Added a check when acting as a QR SCP that returns from the event handler
  if the association is aborted or released (:gh:`pynetdicom/issues/592`)
* Added :attr:`AE.connection_timeout
  <pynetdicom.ae.ApplicationEntity.connection_timeout>` (:gh:`pynetdicom/issues/616`)
* Updated to meet the 2021e version of the DICOM Standard
* Added type hints
* Handle non-conformant A-ASSOCIATE (RJ) 'Result', 'Source' and 'Diagnostic'
  values during ACSE negotiation (:gh:`pynetdicom/issues/633`)
* Added `query_model` keyword parameter to
  :meth:`~pynetdicom.association.Association.send_c_cancel` to make sending a
  C-CANCEL request easier (:gh:`pynetdicom/issues/535`)
* Added the following configuration options:

  * :attr:`~pynetdicom._config.CODECS` to allow customising the
    codecs used when decoding text-like PDU parameters (:gh:`pynetdicom/issues/611`)
  * :attr:`~pynetdicom._config.VALIDATORS` to allow customising the
    validation performed on UIDs and AE titles (:gh:`pynetdicom/issues/515`, :gh:`pynetdicom/issues/549`)
  * :attr:`~pynetdicom._config.WINDOWS_TIMER_RESOLUTION` to allow customisation
    of the timer resolution used when running on Windows (:gh:`pynetdicom/issues/620`)
  * :attr:`~pynetdicom._config.PASS_CONTEXTVARS` to allow user code to define
    contextual behavior
  * :attr:`~pynetdicom._config.STORE_SEND_CHUNKED_DATASET`
    to allow the use of a chunked read when a file path is passed to
    :meth:`~pynetdicom.association.Association.send_c_store` in order to
    reduce the memory needed for sending datasets (:gh:`pynetdicom/issues/517`)
  * :attr:`~pynetdicom._config.STORE_RECV_CHUNKED_DATASET`
    to allow storing received C-STORE datasets directly to file,
    reducing the memory needed when receiving datasets (:gh:`pynetdicom/issues/517`)
  * :attr:`~pynetdicom._config.UNRESTRICTED_STORAGE_SERVICE` to allow the
    use of the AE as an unrestricted Storage SCP (:gh:`pynetdicom/issues/505`)

* The DUL reactor should be more performant when processing multiple successive events
  (:gh:`pynetdicom/pull/651`)
* Added :attr:`Association.network_timeout_response
  <pynetdicom.association.Association.network_timeout_response>` to allow normal
  association release on network timeout expiry rather than an abort (:gh:`pynetdicom/issues/619`)



Changes
.......

* Removed support for Python 2.7, 3.5 and 3.6, added it for Python 3.9 and 3.10
* Minimum *pydicom* version is 2.2
* The *Failed SOP Instance UID List* sent with the final C-GET/C-MOVE SCP
  failure or warning responses no longer includes the SOP Instance UIDs for
  sub-operations that return a warning status
* SOP Class and Instance variable names changed to match the new `UID keywords
  <https://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html#table_A-1>`_
  from the DICOM Standard. In particular ``VerificationSOPClass`` is now simply
  :attr:`~pynetdicom.sop_class.Verification`
* All AE titles and DIMSE elements with a VR of **AE** should be set using an
  ASCII :class:`str` rather than :class:`bytes`
* The default bind address used when making association requests has been changed to
  ``("127.0.0.1", 0)`` (:gh:`pynetdicom/issues/680`)
* ``DULServiceProvider.primitive`` and ``DULServiceProvider.pdu`` have been removed
* :meth:`AssociationSocket.connect<pynetdicom.transport.AssociationSocket.connect>`
  now takes a :class:`~pynetdicom.transport.T_CONNECT` primitive
