Important Concepts
==================

UIDs
----
Unique identifiers (UIDs) are a way of uniquely identifying a wide variety
of items in a way that guarantees uniqueness across multiple countries, sites,
vendors and equipment. The UID identification scheme used by DICOM is based on
the numeric form of the OSI Object Identification as defined by `ISO/IEC 8824 <https://www.iso.org/standard/68350.html>`_
(`ITU X.680 <https://www.itu.int/itu-t/recommendations/rec.aspx?rec=x.680>`_).

Each UID is composed of two parts, an <org root> and a <suffix>:
UID = <org root>.<suffix>

The <org root> uniquely identifies an organisation and is composed of numeric
components as defined by ISO/IEC 8824. The <suffix> portion of the UID is also
componsed of a number of numeric componets, however it is generated by the
application and must be unique within the scope of the <org root>.

The DICOM <org root> is 1.2.840.10008 and is reserved for use for DICOM defined
items and shall not be used for privately defined items.

More information on DICOM UIDs is available in `Part 5 <http://dicom.nema.org/medical/dicom/current/output/html/part03.html>`_
of the DICOM Standard.


DICOM Information Model
-----------------------
Information Object Definition (IOD)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
An IOD is an object-orientated abstract data model use to specify information
about a class of real-world objects that share the same properties.
For example, a *Patient*, a *Study*, an imaging *Series* and a piece of imaging
*Equipment* are all real world objects. An IOD, then, is the data model used to
define the relationship between the objects (the *Patient* has
one or more *Studies*, each *Study* contains one or more *Series* and each
*Series* is created by a piece of *Equipment*).

IODs come in two types; composite and normalised IODs. Normalised IODs
generally represent only a single class of real-world objects (such as the
`Print Job IOD <http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_B.11.2.html>`_
). Composite IODs include
information about related real-world objects (such as the
`CT Image IOD <http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_A.3.3.html>`_
which contains similar objects to the *Patient/Study/Series/Equipment*
example).

IODs are defined in `Part 3 <http://dicom.nema.org/medical/dicom/current/output/html/part03.html>`_
of the DICOM Standard.

SOP Classes
~~~~~~~~~~~
A Service-Object Pair (SOP) Class is defined by the union of an IOD and a DIMSE
service group.

* **Composite SOP Classes** are the union of Composite IODs and
  DIMSE-C services. An example of a Composite SOP Class is the *CT Image
  Storage SOP Class*, which is the union of the *CT Image IOD* and the DIMSE
  C-STORE service and stores information about a
  single slice of a patient's CT scan. A complete scan (a *Series*) would
  then be made up of one or more *CT Image Storage SOP Class* instances, all
  with the same *Study Instance UID* and *Series Instance UID* values but
  differing *SOP Instance UID* values.
* **Normalised SOP Classes** are the union of Normalised IODs and DIMSE-N
  services. An example of a Normalised SOP Class is the *Print Job SOP
  Class*, which is the union of the *Print Job IOD* and the DIMSE
  N-EVENT-REPORT and N-GET services. The *Print Job SOP Class* is abstraction
  of a print job containing one or more films to be printed.

The DIMSE-C and DIMSE-N services are defined in
`Part 7 <http://dicom.nema.org/medical/dicom/current/output/html/part07.html>`_
of the DICOM Standard. Every DICOM SOP class has its own UID that can be found in
`Part 6 <http://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html>`_.

Service Classes
~~~~~~~~~~~~~~~
A DICOM Service Class defines a group of one or more SOP Classes related to a
service that is to be used by communicating application  entities, as well as
the rules that are to govern the provision of the service. Services
include storage of SOP Class instances, verification of DICOM connectivity,
querying and retrieval of managed SOP instances, printing of images and many
others.

Service Classes are defined in `Part 4 <http://dicom.nema.org/medical/dicom/current/output/html/part04.html>`_
of the DICOM Standard and each service class has its own UID defined in
`Part 6 <http://dicom.nema.org/medical/dicom/current/output/chtml/part06/chapter_A.html>`_.


Presentation Contexts
---------------------
A Presentation Context consists of an Abstract Syntax and one or more Transfer
Syntaxes, along with an ID value. Presentation Contexts are used during the
negotiation of an association to provide a method for communicating AEs to
agree on a set of supported services.

* The association *requestor* may offer multiple presentation contexts per
  association but is limited to a maximum of 128 proposed contexts.
* Each presentation context contains one Abstract Syntax and one or more
  Transfer Syntaxes.
* The *requestor* may propose multiple contexts with the same Abstract Syntax
* The association *acceptor* may accept or reject each presentation context
  individually, but only one transfer syntax may be accepted per presentation
  context.
* The *acceptor* selects a suitable Transfer Syntax for each accepted
  presentation context.


Abstract Syntax
~~~~~~~~~~~~~~~
An `Abstract Syntax <http://dicom.nema.org/medical/dicom/current/output/chtml/part08/chapter_B.html>`_
is a specification of a set of data elements and their associated semantics.
Each Abstract Syntax is identified by an *Abstract Syntax Name* in the form
of a UID. Abstract syntax names used with DICOM are usually the officially
registered SOP class UIDs (and the abstract syntax is therefore the SOP class
itself), but the standard also allows the use of private
abstract syntaxes. While pynetdicom can handle association negotiation
containing private abstract syntaxes the implementation of the associated
services/semantics is up to the end user.


Transfer Syntax
~~~~~~~~~~~~~~~
A `Transfer Syntax <http://dicom.nema.org/medical/dicom/current/output/chtml/part08/sect_B.2.html>`_
defines a set of encoding rules able to unambiguously
represent the data elements defined by one or more Abstract Syntaxes. In
particular, the negotiation of transfer syntaxes allows communicating AEs to
agree on the encoding techniques they are able to support (i.e. byte ordering,
compression, etc.).

The official DICOM transfer syntaxes are defined in
`Part 5 <http://dicom.nema.org/medical/dicom/current/output/html/part05.html#chapter_8>`_
of the DICOM Standard. The Standard also allows the use of privately defined
transfer syntaxes. While pynetdicom is able to handle association
negotiation containing private transfer syntaxes, the implementation of the
associated encoding requirements is the responsibility of the end user.


Example
~~~~~~~
An AE wants to store CT images on a peer AE, and supports transfer of the
images with Implicit VR Little Endian, Explicit VR Little Endian and
JPEG Baseline encoding. It would propose the following Presentation Context:

* Abstract Syntax UID: 1.2.840.10008.5.1.4.1.1.2 (CT Image Storage)
* Transfer Syntax UIDs:

  * 1.2.840.10008.1.2 (Implicit VR Little Endian)
  * 1.2.840.10008.1.2.1 (Explicit VR Little Endian)
  * 1.2.840.10008.1.2.4.50 (JPEG Baseline)

A responding AE can either reject the presentation context or accept it and
specify which transfer syntax will be used.


Association
-----------
The first stage of any instance of communication between peer AEs is
association establishment, which is used to negotiate the type of data to be
exchanged and how that data will be encoded. The association *requestor* sends
an A-ASSOCIATE message to the a peer AE which contains a list of proposed
presentation contexts, association negotiation items and a high-level
definition of the `application context <http://dicom.nema.org/medical/dicom/current/output/chtml/part07/chapter_A.html>`_
(which for DICOM is the UID 1.2.840.10008.3.1.1.1).

Association Negotiation and Extended Negotiation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Standard association negotiation usually involves the peer AEs agreeing on a
set of abstract syntax/transfer syntax combinations through the mechanism
provided by presentation context. In some cases it may be necessary for
communicating AEs to exchange more detailed information about features and
services they may optionally require/support. This is done through the use of
user information items. Some of these items are always compulsory (such as
the maximum length and implementation identification notifications) while the
rest are either completely optional or conditionally required, depending on the
requested service class (such as SCP/SCU role negotiation when the
Query/Retrieve service class' C-GET operation is requested). Collectively these
user information items are usually referred to as *extended negotiation*.

Extended negotiation items are defined in
`Part 7 <http://dicom.nema.org/medical/dicom/current/output/chtml/part07/chapter_D.html>`_
and
`Part 8 <http://dicom.nema.org/medical/dicom/current/output/chtml/part08/chapter_D.html>`_
of the DICOM Standard.

Association Establishment
~~~~~~~~~~~~~~~~~~~~~~~~~
When peer DICOM AEs have successfully negotiated an association it becomes
established and either AE is able to utilise the available services.

Association Rejection
~~~~~~~~~~~~~~~~~~~~~
At any time during association negotiation the *acceptor* AE may reject the
association by sending an association rejection response. If an association
is rejecting it is not available for use by either AE and communication between
them is ended.

Association Release
~~~~~~~~~~~~~~~~~~~
If an association has been established then either AE may send an association
release notification to establish the orderly end of the association.
The receiver of the notification responds with a confirmation of the release
and then ends communications.

Association Abort
~~~~~~~~~~~~~~~~~
If an association has been established then either AE may send an association
abort notification to immediately end the association. An abort notification
may be sent or received at any time during an association, including during
negotiation or release.
